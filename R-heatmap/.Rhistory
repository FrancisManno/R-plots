group <- df$v13[df$v13 > 0]=1
group <- df$v13
group[group>0] <- 1
group
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='both',
Rowv=TRUE,
Colv=TRUE,
RowSideColors = c("yellow","purple")[as.factor(group)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix)
)
group
iris
iris3
df <- iris
zscore <- function(V) {
V <- as.numeric(V)
Vz <- (V-(mean(V)))/sd(V)
return(Vz)
}
N <- length(df)  # Number of variables
colnames(df)
df[,1:4] <- apply(iris[,1:4],2,zscore)
df
df.matrix <- as.matrix(df[,1:4])
quantile.range <- quantile(df.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","gray70","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='both',
Rowv=TRUE,
Colv=TRUE,
RowSideColors = c("yellow","purple","red")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix)
)
require(gplots)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='both',
Rowv=TRUE,
Colv=TRUE,
RowSideColors = c("yellow","purple","red")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix)
)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='both',
Rowv=TRUE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix)
)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix)
)
colnames(df.matrix)
installed.packages(rmarkdown)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("knitr")
librery(knitr)
librsry(knitr)
library(knitr)
install.packages("rmarkdown")
require(gplots)
# iris
df <- iris
# Z-scores each column
zscore <- function(V) {
V <- as.numeric(V)
Vz <- (V-(mean(V)))/sd(V)
return(Vz)
}
df[,1:4] <- apply(iris[,1:4],2,zscore)
# following code limits the lowest and highest color to 5%, and 95% of your range, respectively
df.matrix <- as.matrix(df[,1:4])
quantile.range <- quantile(df.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
# Find optimal divergent color palette (or set own)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","gray70","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
install.packages("DiagrammeR")
install.packages("XML")
require(gplots)
# iris
dz <- df <- iris
zscore <- function(V) {
V <- as.numeric(V)
Vz <- (V-(mean(V)))/sd(V)
return(Vz)
}
dz[,1:4] <- apply(iris[,1:4],2,zscore)
dz.matrix <- as.matrix(dz[,1:4])
quantile.range <- quantile(df.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","gray70","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(df.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
colnames(df)
heatmap.2(as.matrix(df[,1:4]),
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
quantile.range <- quantile(as.matrix(df[,1:4]), probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","gray70","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(as.matrix(df[,1:4]),
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue2","lightskyblue","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(as.matrix(df[,1:4]),
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(as.matrix(df[,1:4]),lightskyblue2
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(as.matrix(df[,1:4]),lightskyblue2
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
heatmap.2(as.matrix(df[,1:4]),
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
dz.matrix
table(iris$Species)
dz[,1:4] <- apply(iris[,1:4],2,zscore)
dz.matrix <- as.matrix(dz[,1:4])
quantile.range <- quantile(df.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
dz.matrix <- as.matrix(dz[,1:4])
quantile.range <- quantile(dz.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
color.function <- colorRampPalette(c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4"))
color.palette  <- color.function(length(palette.breaks) - 1)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("yellow","purple","forestgreen")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("#6d62d9ff","#7331adff","#2c1563ff")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("#7331adff","#6d62d9ff","#2c1563ff")[as.factor(df$Species)],
col    = color.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
faisan
faisan <- c("#ffdfbaff","#ec7531ff","#8c392bff","#4b2d28ff","#783234ff","#9e2f0eff","#503a22ff","#64070cff","#b40000ff","#ed1c17ff","#f7202fff")
faisan <- colorRampPalettec("#ffdfbaff","#ec7531ff","#8c392bff","#4b2d28ff","#783234ff","#9e2f0eff","#503a22ff","#64070cff","#b40000ff","#ed1c17ff","#f7202fff")
colorRampPalette
faisan <- colorRampPalette(c("#ffdfbaff","#ec7531ff","#8c392bff","#4b2d28ff","#783234ff","#9e2f0eff","#503a22ff","#64070cff","#b40000ff","#ed1c17ff","#f7202fff"))
faisan.palette <- faisan(length(palette.breaks) - 1)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("#7331adff","#6d62d9ff","#2c1563ff")[as.factor(df$Species)],
col    = faisan.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
c("#4b2a00ff","#9a5d02ff","#a4752fff","#3f2806ff","#634403ff","#cf9a32ff","#cb5014ff","#e00106ff",
"#b47886ff","#4e465dff","#153c39ff","#355785ff","#2fb5cfff","#0e7981ff","#1252daff","#00108aff","#000054ff")
faisan <- c("#4b2a00ff","#9a5d02ff","#a4752fff","#3f2806ff","#634403ff","#cf9a32ff","#cb5014ff","#e00106ff",
"#b47886ff","#4e465dff","#153c39ff","#355785ff","#2fb5cfff","#0e7981ff","#1252daff","#00108aff","#000054ff")
faisan.palette <- faisan(length(palette.breaks) - 1)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("#7331adff","#6d62d9ff","#2c1563ff")[as.factor(df$Species)],
col    = faisan.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
faisan <- colorRampPalette(c("#4b2a00ff","#9a5d02ff","#a4752fff","#3f2806ff","#634403ff","#cf9a32ff","#cb5014ff","#e00106ff",
"#b47886ff","#4e465dff","#153c39ff","#355785ff","#2fb5cfff","#0e7981ff","#1252daff","#00108aff","#000054ff"))
faisan.palette <- faisan(length(palette.breaks) - 1)
heatmap.2(dz.matrix,
main = "Data",
density.info="none",
trace="none",
key.title = "",
dendrogram='column',
Rowv=FALSE,
Colv=TRUE,
RowSideColors = c("#7331adff","#6d62d9ff","#2c1563ff")[as.factor(df$Species)],
col    = faisan.palette,
breaks = palette.breaks,
labCol = colnames(df.matrix),
srtCol=0,
cexCol=1
)
faisan <- colorRampPalette(c("#ffdfbaff","#ec7531ff","#8c392bff","#4b2d28ff","#783234ff","#9e2f0eff","#503a22ff","#64070cff","#b40000ff","#ed1c17ff","#f7202fff"))
faisan <- colorRampPalette(c("#ffdfbaff","#ec7531ff","#8c392bff","#4b2d28ff","#783234ff","#9e2f0eff","#503a22ff","#64070cff","#b40000ff","#ed1c17ff","#f7202fff"))
length(faisan())
length(faisan
)
redblue <- c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4")
optim.color <- function(Data,Colors) {
# Following code limits the lowest and highest color to 5%, and 95% of your range, respectively
quantile.range <- quantile(dz.matrix, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
# Find optimal divergent color palette (or set own)
color.function <- colorRampPalette(redblue)
color.palette  <- color.function(length(palette.breaks) - 1)
return(color.palette,palette.breaks)
}
redblue <- c("navy","dodgerblue4","dodgerblue2","deepskyblue","lightskyblue2","red","firebrick2","firebrick3","firebrick","firebrick4")
optim.color <- function(Data,Colors) {
mtx <- as.matrix(Data)
# Following code limits the lowest and highest color to 5%, and 95% of your range, respectively
quantile.range <- quantile(mtx, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
# Find optimal divergent color palette (or set own)
color.function <- colorRampPalette(Colors)
color.palette  <- color.function(length(palette.breaks) - 1)
return(color.palette,palette.breaks)
}
optim.color(dz[,1:4],redblue)
optim.color <- function(Data,Colors) {
mtx <- as.matrix(Data)
# Following code limits the lowest and highest color to 5%, and 95% of your range, respectively
quantile.range <- quantile(mtx, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
# Find optimal divergent color palette (or set own)
color.function <- colorRampPalette(Colors)
color.palette  <- color.function(length(palette.breaks) - 1)
return(list(color.palette=color.palette,palette.breaks=palette.breaks))
}
optim.color <- function(Data,Colors) {
mtx <- as.matrix(Data)
# Following code limits the lowest and highest color to 5%, and 95% of your range, respectively
quantile.range <- quantile(mtx, probs = seq(0, 1, 0.01))
palette.breaks <- seq(quantile.range["5%"], quantile.range["95%"], 0.1)
# Find optimal divergent color palette (or set own)
color.function <- colorRampPalette(Colors)
color.palette  <- color.function(length(palette.breaks) - 1)
return(list(color.palette=color.palette,palette.breaks=palette.breaks))
}
optim.color(dz[,1:4],redblue)
optim.color(dz[,1:4],redblue)[1]
optim.color(dz[,1:4],redblue)[2]
install.packages("dendextend")
install.packages("circlize")
install.packages("dendextend")
install.packages("circlize")
library(dendextend)
library(circlize)
# https://cran.r-project.org/web/packages/dendextend/vignettes/introduction.html
# create a dendrogram
colnames(iris)
vec <- colnames(iris[,1:4])
vec
load("/home/rr/git_here/micasoft/sandbox/raul/BASC/10kn.RData")
load("/misc/ernst/rcruces/git_here/micasoft/sandbox/raul/BASC/10kn.RData")
k10$S.norm
S.norm<-k10$S.norm
vec <- names(diag((S.norm)))
vec
iris
length(iris)
dim(iris)[1]
data.mtx <- as.matrix(iris[,1:4])
N <- dim(iris)[1]    # Number of observations
d <- dist(data.mtx,method = "euclidean")
hcc <- hclust(d,method = "ward.D",members = 1:N)
dend <- as.dendrogram(hcc)
dend <- dend %>%
color_branches(dend,col=c("forestgreen","red3","darkblue"),k=3) %>%
color_labels(dend,col=c("forestgreen","red3","darkblue"),k=3) %>%
set("branches_lwd", 3)
par(mar = rep(0,4))
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4)
plot(dend)
plot(dend,hang = -1, cex = 0.6)
plot(hcc,hang = -1, cex = 0.6)
plot(hcc,hang = 0.1, cex = 0.6)
plot(as.phylo(hcc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
install.packages("ape")
library("ape")
